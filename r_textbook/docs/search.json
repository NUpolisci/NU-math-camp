[{"path":"index.html","id":"ch1","chapter":"1 Welcome!","heading":"1 Welcome!","text":"text guide thinking data analysis R Python students social sciences. Included text elementary introductions computational programming languages useful performing data management quantitative statistical analyses. text serve companion main text: Introductory Probability Statistics Social Sciences.texts jointly authored Jean Clipperton Sarah Moore serve Northwestern University Political Science Sociology graduate student methodological curriculum. develop texts graduate student curriculum, relied core sources:YaRrr! Pirate’s Guide R Nathaniel PhillipsAdvanced R, First Second Editions Hadley Wickhamggplot2: Elegant Graphics Data Analysis Hadley WickhamYihui Xie’s bookdown: Authoring Books Technical Documents R MarkdownSean Kross’s guide bookdown","code":""},{"path":"index.html","id":"requirements","chapter":"1 Welcome!","heading":"1.1 Requirements","text":"prerequisite, tutorials text require download R, RStudio IDE, Python, PyCharm interface pertinent coding languages– R Python. Later sections go detail regarding load interact programs computer, please ensure sufficient storage computing power operate programs.Additional activities require become familiar GitHub, LaTeX, additional computational packages downloaded ad hoc respective programming platform.suggest familiarize StackExchange StackOverflow. Stack sites host incredibly helpful message boards troubleshooting problems related really anything, emphasize usefulness questions related statistics programming. ’s likely one many questions already answered Stack!","code":""},{"path":"index.html","id":"questions-or-comments","chapter":"1 Welcome!","heading":"1.2 Questions or Comments","text":"text updated regularly welcome suggestions toward improvement. Please email one authors, Sarah Moore Jean Clipperton, comments.","code":""},{"path":"ch2.html","id":"ch2","chapter":"2 Getting Started","heading":"2 Getting Started","text":"chapter:Installing R RStudio IDEInstalling R RStudio IDEStarting script RStudioStarting script RStudioInstalling Python Pycharm IDEInstalling Python Pycharm IDEStarting new project Python script PyCharmStarting new project Python script PyCharm","code":""},{"path":"ch2.html","id":"installing-and-familiarizing-yourself-with-r-and-rstudio","chapter":"2 Getting Started","heading":"2.1 Installing and Familiarizing Yourself with R and RStudio","text":"working remaining text need complete couple crucial steps. need ensure access computational programs text cover. First, cover installation R RStudio integrated development environment.","code":""},{"path":"ch2.html","id":"r","chapter":"2 Getting Started","heading":"2.1.1 R","text":"R downloadable via CRAN (Comprehensive R Archive Network). Aside housing R base distribution, CRAN also houses additional help files myriad packages available download access base system– later! need choose R distribution download suitable operating system (.e. macOS, Windows, Linux). Go ahead follow instructions download link, ensure program downloads properly, stored familiar location computer.","code":""},{"path":"ch2.html","id":"rstudio","chapter":"2 Getting Started","heading":"2.1.2 RStudio","text":"Next, visit RStudio site. RStudio environment makes working R programs little manageable. might seen opened R download, base R platform simple. RStudio instead structured setup allows file visualization management, cataloging package help files, integration additional programs single screen, still maintaining basic functionality R.downloading RStudio, whether use Server Desktop version. make choice among options, follow download guidelines given operating system ensure program stores familiar location computer.","code":""},{"path":"ch2.html","id":"navigating-rstudio","chapter":"2 Getting Started","heading":"2.1.3 Navigating RStudio","text":"Upon completing download R RStudio, may open RStudio browse around. see RStudio interface 4 primary panes.Basic RStudio Pane LayoutIn SOURCE pane, write editable savable scripts code. RStudio lets operate different types source codes depending specific script file open. visit later talk RMarkdown potential uses RStudio outside analyses. R source code file format “.r”.run line code, can either click Run button top script pane, press Cmd/Ctrl + Enter keyboard, cursor line code. run chunks script, can highlight relevant code perform operation code text highlighted. run full script can simply press Cmd/Ctrl + Shift + Enter.run line code, can either click Run button top script pane, press Cmd/Ctrl + Enter keyboard, cursor line code. run chunks script, can highlight relevant code perform operation code text highlighted. run full script can simply press Cmd/Ctrl + Shift + Enter.Commenting code one important practices develop early programming. R, simply begin line code #. prevent program running whatever written line script. Note every line comments need input new #.Commenting code one important practices develop early programming. R, simply begin line code #. prevent program running whatever written line script. Note every line comments need input new #.CONSOLE default location display code output well previously run code. can also run code console , however advisable earlier codes edited, save editable script possible source pane. Running code sometimes also takes long time prone bugs, run code STOP sign appear upper right hand corner console. need force stop code, pressing stop button discontinue operation.CONSOLE default location display code output well previously run code. can also run code console , however advisable earlier codes edited, save editable script possible source pane. Running code sometimes also takes long time prone bugs, run code STOP sign appear upper right hand corner console. need force stop code, pressing stop button discontinue operation.R ENVIRONMENT contains names details objects programmed R’s local memory. example, let’s say created variable named potatoes contained names different types potatoes. environment pane contain variable name meta-data many different values observed variable (e.g. variable length). , let’s say imported dataset called potato_information. case dataset, environment tab provide information dimensions dataset given number total variables observations. R environment panel also tabs history, connections, Git, object viewing. tabs immediately relevant address later text, necessary.R ENVIRONMENT contains names details objects programmed R’s local memory. example, let’s say created variable named potatoes contained names different types potatoes. environment pane contain variable name meta-data many different values observed variable (e.g. variable length). , let’s say imported dataset called potato_information. case dataset, environment tab provide information dimensions dataset given number total variables observations. R environment panel also tabs history, connections, Git, object viewing. tabs immediately relevant address later text, necessary.Data SourceThe FILES, PLOTS, PACKAGES, HELP another multi-use pane, tabs likely relevant . Files tab allow open interact files available directories accessible local, git, cloud workspace. Plots tab displays image graph outputs source code. Packages tab lists installed packages, checkboxes indicate whether package loaded use. Finally, Help tab allows access R package help files avaible CRAN. can query specific package’s help file search bar Help tab, can call specific help file source code console. topics addressed chapters come.can customize available tabs. example, might integrate Git account RStudio, cover later. custom features available play around RStudio Preferences.begin writing editing code R, click blank page icon top left hand corner. drop menu gives number options choose , choose R Script. options new sheets can open edit R, now focus basic script. now rest course, assume R usage coding activities moderated via RStudio, opposed base R program.","code":"\n# Imagine here is where I am going to put information about this variable. \nwars_1920 \n\n# And here is where I will explain why I ran this test. \nt.test(wars_1920~industrial)"},{"path":"ch2.html","id":"why-r","chapter":"2 Getting Started","heading":"2.1.4 Why R?","text":"Oftentimes, students ask learn R rather potential statistical analysis programs, STATA. easy clearest answer R ’s cognate applications open source. means R additional packages R free use. addition free, open source coding also means back-end development codes open free reproduce modify.R’s package diversity, data visualization capabilities, relative age programs also reasons might argue emphasis R. open source languages, Python, quickly becoming relevant social scientists academic non-academic contexts. However, languages yet widely popular. Therefore, may take time languages Python become accessible necessary training quantitative social science.","code":""},{"path":"ch2.html","id":"installing-and-familiarizing-yourself-with-python","chapter":"2 Getting Started","heading":"2.2 Installing and Familiarizing Yourself with Python","text":"graduate education modernizes toward training academic non-academic jobs, teaching programming literacy beyond just R essential. , also cover basics Python coding language well. mentioned, Python newer scene generally especially among social sciences. means resources available make Python legible social scientists training still built . hope text least exposes enough Python one available Python interface might pursue training later , desired.","code":""},{"path":"ch2.html","id":"python","chapter":"2 Getting Started","heading":"2.2.1 Python","text":"First, Windows user download latest version Python, least Python 3. Just like R RStudio, sure download correct version operating system. Mac Linux users already Python, run problems just try download Python. downloaded Python, make sure downloaded location computer makes easy find . Otherwise, need open program download.","code":""},{"path":"ch2.html","id":"pycharm-ide","chapter":"2 Getting Started","heading":"2.2.2 PyCharm IDE","text":"Just like R RStudio, rely integrated development environment help cushion interaction Python, otherwise minimalist interface. PyCharm great IDE beginners don’t want stick RStudio Python projects, still want well-built environment. encourage check Reddit message board threads IDEs might better suited particular goals Python become familiar . Visit PyCharm site, download suitable version, read documentation. couple different versions download, recommend opt open-source Community version. Though PyCharm developed potential interfaces Python, structure still quite opaque new coding– even us around R . read can getting started, revisit Python later chapters, hope things come together smoothly.open PyCharm, prompted start new project, open existing project local working directory, work project version control. now, start new project without modifying additional selections prompt. hit “Create” encounter following screen:left hand side file tree, project related scripts files. right hand side source script editable code. case want start new Python script instead welcome script shown , simply choose File \\(\\rightarrow\\) New… \\(\\rightarrow\\) Python File. may notice, Python code files file format “.py”. Along bottom edge, see options toggle additional panels related version control, dos, packages, etc. , much like pane system integrated RStudio. PyCharm additional add-ons can generate customize . , recommend take look documentation PyCharm site want advanced environment.","code":""},{"path":"ch2.html","id":"moving-forward","chapter":"2 Getting Started","heading":"2.3 Moving Forward","text":"remainder text focus primarily R later basics Python. first going take quick detour Github LATEX: two additional software distributions also important develop scientific research academia.","code":""},{"path":"ch3.html","id":"ch3","chapter":"3 Documentation with LATEX","heading":"3 Documentation with LATEX","text":"chapter:LATEX use ?LATEX use ?Let’s make simple: Using Overleaf create TEX-style documentsLet’s make simple: Using Overleaf create TEX-style documentsWorking templatesWorking templatesConventions LATEXConventions LATEXPortions chapter derived Learn LaTeX 30 minutes available Overleaf–please check resource!","code":""},{"path":"ch3.html","id":"latex-its-pronounced-lah-tekh-or-lay-tekh","chapter":"3 Documentation with LATEX","heading":"3.1 LATEX: It’s pronounced LAH-tekh or LAY-tekh","text":"LATEX document preparation program allows easily develop documents plain text later compiled PDF form. word processors follow “See Get” preparation– page see typed final product. LATEX instead uses underlying computational software turn typed plain text user-specified style output can easily changed conform desired specifications, academic journals. LATEX, formatting tables, writing equations, auto-formatting section figure labels becomes breeze. means become clear explore .many distributions help navigate creation LATEX documents, including even features R. However, online programs becoming useful transportable means navigate LATEX environment. , instead asking download software, ’ll instead direct go Overleaf, online TeX editor also collaborative environment. Overleaf makes easy see document history, discover templates specific document types (e.g. CVs posters) journal submission requirements, access projects many different machines without download LATEX .Throughout course, likely others, use LATEX format compile homework assignments. many cases, homework problems already typeset LATEX document, required format answers document compile document (.e. convert document PDF) turn via email Canvas.case instead like explore software option LATEX home computer, can check TinyTeX.","code":""},{"path":"ch3.html","id":"getting-set-up-on-overleaf","chapter":"3 Documentation with LATEX","heading":"3.1.1 Getting Set Up on Overleaf","text":"get started, need create Overleaf account. straightforward. premium plan likely necessary right now, though might consider looking advanced plans later. premium student plan available $8/month.created account logged , encounter main page. One day filled works progress, today look something like :Overleaf DemoAs can see, site pretty easy navigate ’ll leave explore little bit.","code":""},{"path":"ch3.html","id":"your-first-latex-overleaf-project","chapter":"3 Documentation with LATEX","heading":"3.2 Your First LATEX Overleaf Project","text":"get started, choose New Project button green left-hand side page. drop-menu, choose “Example Project” name project something like “2022_Tutorial_LASTNAME”.select Create, new project open. project page, far left-hand side file tree images, .tex files, necessary components needed compile final document (make sense, promise!!).middle pane plain text file. start-, file named “main.tex”– plain text files want render pdf end “.tex”. “main.tex” file want input text wish publish particular document.Overleaf Main .tex FileThe right-hand pane preview rendered document given formatting specifications given “main.tex”.Overleaf Compiled FileThis example document provided Overleaf go long way showing intricacies preparing TeX-style document. , ’ll go main points ensure can least turn first homework assignments without issue.","code":""},{"path":"ch3.html","id":"the-anatomy-of-a-tex-style-document","chapter":"3 Documentation with LATEX","heading":"3.3 The Anatomy of a TeX-style document","text":"section assume still viewing tutorial document accessed previous section. discuss bit composite elements TeX document required successfully compile. compiled TeX file one made journey plain file PDF rendered document.beginning every .tex file start preamble. preamble section specify document class, details like implement throughout document, define parameters elements might appear text. preamble also important indicating packages like LaTeX use create certain features text. Packages simply additional code components developed make certain features feasible without requiring users code specifications . Different packages useful modifying design layout things like tables sections multiple column.tutorial .tex document Overleaf, following text composes preamble, published text. preamble, code \\begin{document} begins section published text.Two elements preamble absolutely necessary cases. codes \\documentclass{} \\begin{document} required documents. Additionally, \\end{document} always required end text ensure document compiles. remaining packages loaded via command \\usepackage{}. won’t cover anything else related class=“latex”>LATEX packages , multitude documentationThe text commands \\begin{document} \\end{document} body. body text exactly specify ! type relevant text want typeset, also see body littered commands comments. Throughout .tex file command always begin back slash \\ followed chosen command. ensure command runs properly, ensure accompanying package included preamble. example, wanted typeset table caption specify command \\begin{table} table formatting text specify \\end{table} end, \\caption{} command falling somewhere .might also want comment code, put notes certain packages preamble . , simply begin comment text percentage symbol %. comment can begin anywhere text want stopped new line text started (.e. must hit Return end comment line).","code":"\\documentclass{article}\n\n% Language setting\n% Replace `english' with e.g. `spanish' to change the document language\n\\usepackage[english]{babel}\n\n% Set page size and margins\n% Replace `letterpaper' with `a4paper' for UK/EU standard size\n\\usepackage[letterpaper,top=2cm,bottom=2cm,left=3cm,right=3cm,marginparwidth=1.75cm]{geometry}\n\n% Useful packages\n\\usepackage{amsmath}\n\\usepackage{graphicx}\n\\usepackage[colorlinks=true, allcolors=blue]{hyperref}\n\n\\title{Your Paper}\n\\author{You}\n\n\\begin{document}\\begin{table} \n\n\\caption{Here is a table about interesting activities in Chicago}\n\\begin{tabularx}{|c|c|}\n\\hline \nActvity & Neighborhood \\\\ \n\\hline \nWhirlyBall & Logan Square \\\\\n\\hline \nNature Conservatory & Lincoln Park or Garfield Park \\\\\n\\hline \n\\end{tabularx}\n\n\\end{table}"},{"path":"ch3.html","id":"exercise","chapter":"3 Documentation with LATEX","heading":"3.3.1 Exercise","text":"Change preamble text tutorial document reflect authorship chosen title. See commands \\title{} \\author{}.Change preamble text tutorial document reflect authorship chosen title. See commands \\title{} \\author{}.Edit abstract text describe goals class first year grad school.Edit abstract text describe goals class first year grad school.Recompile document take look right-hand pane Overleaf. newly compiled document reflect changes? get error?Recompile document take look right-hand pane Overleaf. newly compiled document reflect changes? get error?","code":""},{"path":"ch3.html","id":"adding-dimension-to-a-base-document","chapter":"3 Documentation with LATEX","heading":"3.4 Adding dimension to a base document","text":"Given section, able make sense basic elements necessary compile TeX document PDF. Beyond necessities, lot ways play around text make readable interesting, input relevant figures text. tutorial document walks many issues, creating sections, adding figures tables, lists, equations. walk sections ensure even better grasp <class=“latex”>LATEX. now, skip section citations references (2.9), definitely want come back later given Overleaf’s integration Zotero Mendeley.couple things Overleaf Tutorial leave altering text worth mentioning .Bold italic text included via commands \\textbf{*text *} \\textit{*text *}, respectively. examples available regarding text features like Overleaf documentation.Bold italic text included via commands \\textbf{*text *} \\textit{*text *}, respectively. examples available regarding text features like Overleaf documentation.Moving typical text processing software TeX document preparation can difficult can’t always coerce spacing want. Skipping lines equate creating spacing resulting PDF. Instead coerce spacing via different commands. coerce vertical space, can use command \\vspace{} desired amount spacing unit measurement. can done tab spacing, create horizontal space, via command \\hspace{}. can also coerce line break \\\\ point desire line break.Moving typical text processing software TeX document preparation can difficult can’t always coerce spacing want. Skipping lines equate creating spacing resulting PDF. Instead coerce spacing via different commands. coerce vertical space, can use command \\vspace{} desired amount spacing unit measurement. can done tab spacing, create horizontal space, via command \\hspace{}. can also coerce line break \\\\ point desire line break.Related (2), paragraph indenting simple tabbing Word another word processor. Instead, can specify via command document related indentation entire document \\setlength{\\parindent}{}. argument command specify length desired indent points pt. .Related (2), paragraph indenting simple tabbing Word another word processor. Instead, can specify via command document related indentation entire document \\setlength{\\parindent}{}. argument command specify length desired indent points pt. .equation environment, use regular text without breaking equation. want use text equation environment without closing equation first, can use command \\text{} desired regular text.","code":""},{"path":"ch3.html","id":"exercise-1","chapter":"3 Documentation with LATEX","heading":"3.4.1 Exercise","text":"Start new section end tutorial document name Tutorial Workspace.Start new section end tutorial document name Tutorial Workspace.new Tutorial Workspace, create numbered list skills like learn end Math Camp. List order priority.new Tutorial Workspace, create numbered list skills like learn end Math Camp. List order priority.Using unnumbered list environment, create list supplies think might make grad school better. can real imaginary supplies.Using unnumbered list environment, create list supplies think might make grad school better. can real imaginary supplies.Create paragraph describe things learned Math Camp far bold characters. Write couple sentences excited italics.Create paragraph describe things learned Math Camp far bold characters. Write couple sentences excited italics.","code":""},{"path":"ch4.html","id":"ch4","chapter":"4 Integrating R with Github","heading":"4 Integrating R with Github","text":"chapter:direct: fuse RStudio Github version control","code":""},{"path":"ch5.html","id":"ch5","chapter":"5 Basic R Syntax, Data Types, and Structures","heading":"5 Basic R Syntax, Data Types, and Structures","text":"chapter:Basic R syntax conventionsBasic R syntax conventionsBase R arithmetic, logical, Boolean operatorsBase R arithmetic, logical, Boolean operatorsAssigning values objectsAssigning values objectsData types, structures, aggregationData types, structures, aggregation","code":""},{"path":"ch5.html","id":"writing-things-in-r","chapter":"5 Basic R Syntax, Data Types, and Structures","heading":"5.1 Writing things in R","text":"Given last chapter gave tools open R script, now ready get started writing basic code. Let’s get started first basics R operates. R mixed programming code relies objects functions perform user-designated operations. operations provide output interpretation. can think objects like nouns– ‘things’ care analyze; functions like verbs– ‘actions’ want objects.Bringing back potato example first chapter, variable potatoes object. Anything ask R variable potatoes function. example, might want know type variable potatoes . use appropriate function class get answer. get objects functions interact, must nest object function call, shown code chunk . R responds back appropriate answer– , case, find potatoes variable class character.","code":"\nclass(potatoes)## [1] \"character\""},{"path":"ch5.html","id":"some-additional-conventions","chapter":"5 Basic R Syntax, Data Types, and Structures","heading":"5.1.1 Some additional conventions","text":"","code":""},{"path":"ch5.html","id":"operators","chapter":"5 Basic R Syntax, Data Types, and Structures","heading":"5.2 Operators","text":"","code":""},{"path":"ch5.html","id":"arithmetic-operators","chapter":"5 Basic R Syntax, Data Types, and Structures","heading":"5.2.1 Arithmetic Operators","text":"Thankfully, R makes use already common operators perform basic mathematical tasks rely complex function calls.Arithmetic operators form basis math functions; logical operators useful separate objects using functions operators. probably familiar base arithmetic operators:Using operators standalone means can use R glorified calculator. system perform whatever mathematical operation run, following algebraic order operations, PEMDAS. example, can input following arithmetic either R console run script obtain following answers:answers returned R puzzling unsure certain answered obtained based slight differences, may time check arithmetic skills based (Chapter X)[book] accompanying textbook.","code":"\n4*3^2 ## [1] 36\n(4*3)^2## [1] 144\n100-45+24/2## [1] 67\n(100-45+24)/2## [1] 39.5\n24%%2## [1] 0"},{"path":"ch5.html","id":"boolean-and-logical-operators","chapter":"5 Basic R Syntax, Data Types, and Structures","heading":"5.2.2 Boolean and Logical Operators","text":"Logical Boolean operators also important coding R. Sometimes need separate join data logical ways. , might want index data find certain conditions data true. lot verbiage familiar Chapter X [] operations applied form set theoretic notation. list common Logical Boolean operators indicate.mentioned, operators good tools partition join data, well setting conditions operations. get means later, now examples operators work render logical results.Notice output simply logical analysis whether statement evaluated TRUE FALSE. Furthermore, operations similarly follow order operations arithmetic operators.","code":"\n10^10 == 100^5## [1] TRUE\n(10^10 == 100^5) | (10^10 != 100^5)## [1] TRUE\n150 >= 157## [1] FALSE"},{"path":"ch5.html","id":"objects-and-data-types","chapter":"5 Basic R Syntax, Data Types, and Structures","heading":"5.3 Objects and Data Types","text":"previous sections, went perform simple operations using R. However, none output rendered saved later use. makes things difficult time data get larger complex. Aside R’s use glorified calculator, R also flexible data storage container. flexible sense can easily assign, arrange, change data can assign objects naming.Objects R may store data many different arrangements – simple values, variables multiple values, data frames containing multiple variables, . Generally , objects easy way store recall data implicit meaning.create objects, must assign value variable name using <-. example, let’s say want assign year 1995 variable name my_birthday. simply type intended variable name, assignment operator, relevant value. make sure variable saved intended, can run code print(my_birthday) double check output.Note done assignment left--right. necessary, strong norm except certain relevant cases assignment R.Just arithmetic performed actual numbers, operations can performed variables. Let’s say also stored year 1998 variable named sib_birthday. calculate difference birth years, can neatly subtract .Challenge: can also place arithmetic operations variables function. Let’s say want R return absolute value difference. , can simply put desired arithmetic operation variable names function call abs() shown code . differ previous answer output specify absolute value?","code":"\nmy_birthday <- 1995 \nprint(my_birthday)## [1] 1995\nsib_birthday <- 1998 \nmy_birthday - sib_birthday## [1] -3\nabs(my_birthday - sib_birthday)## [1] 3"},{"path":"ch5.html","id":"data-structures","chapter":"5 Basic R Syntax, Data Types, and Structures","heading":"5.4 Data Structures","text":"section contains information adapted Hadley Wickham’ Advanced R.values assign objects can composed different types data create different data structures. classify data structures R based dimensionality whether data contain homogenous (data type) heterogenous (data different types). See table understand classification system, ’ll go detail potential structures fit together.","code":""},{"path":"ch5.html","id":"atomic-vectors","chapter":"5 Basic R Syntax, Data Types, and Structures","heading":"5.4.1 Atomic Vectors","text":"Atomic vectors basic variable component R. table , see atomic vectors unidimensional homogenous. means sequence single type class data compose vector.Data classes type data characterize individual element data structure. data characters integers, R different way dealing different data classes. following table lists data classes examples .","code":""},{"path":"ch5.html","id":"list","chapter":"5 Basic R Syntax, Data Types, and Structures","heading":"5.4.2 List","text":"list less likely data structure compared atomic vectors, might become common start assembling cleaning data. Lists unidimensional heterogenous. Therefore, lists different classes data, composed single dimension elements.","code":"\nlist_example<-as.list(c('gray', 44.8, 67.9, 'purple', 210.4))\n\ntypeof(list_example)## [1] \"list\""},{"path":"ch5.html","id":"matrices-and-arrays","chapter":"5 Basic R Syntax, Data Types, and Structures","heading":"5.4.3 Matrices and Arrays","text":"","code":""},{"path":"ch5.html","id":"data-frame","chapter":"5 Basic R Syntax, Data Types, and Structures","heading":"5.4.4 Data Frame","text":"Data frames likely common type data structure encounter actual data analysis. Data frames multi-dimensional, heterogenous structures. means data frames different types data across rows columns. Furthermore, multi-dimensional nature data frames also allows us give data meta-data sorts, names labels.","code":""},{"path":"ch6.html","id":"ch6","chapter":"6 Functions, Packages, and Doing Stuff with Data","heading":"6 Functions, Packages, and Doing Stuff with Data","text":"chapter:Basic anatomy functions Base RBasic anatomy functions Base RInstalling importing packagesInstalling importing packagesError messages navigating help filesError messages navigating help filesBasic code debuggingBasic code debugging","code":""},{"path":"ch6.html","id":"theres-a-package-for-that-the-endless-possibilities-outside-of-base-r","chapter":"6 Functions, Packages, and Doing Stuff with Data","heading":"6.1 There’s a package for that: the endless possibilities outside of base R","text":"call built-functions require additional specification installation “Base R.” However, given expansion R’s use across many fields rapidly evolving landscape computational sciences, developers programmers built easy--install software distributions compatible use functions within R. reference additional features packages.Packages typically contain number different functions similar basic structure created similar theme goal mind. example, plm package specifically modelling panel data; , data considers variables time. Another example package clubSandwich, estimates additional types standard errors different models tests whether model still significant given updated standard error. packages provide additional tools reshaping manipulating data, visualizing data, dealing less standard forms data.Nowadays, Base R really quite limited can achieve relative additional packages. Therefore, literacy certain packages useful important skill develop. focus install access additional packages, specific emphasis package useful chapters come– tidyverse dplyr. packages become typicalTo perform initial simple install package, merely run call install.packages(\"\"). call downloads package CRAN, repository R related “stuff” mentioned Chapter 2. run code, see string script run console. normal something really need pay attention unless error, R alert .packages take longer others install, oftentimes installing packages requires R also installs package’s dependencies. Dependencies additional packages necessary specified package run. cases, R need permission download install dependencies. one hand, can choose allow dependencies downloaded ad hoc, time prompted download package dependencies. hand, can specify R downloads dependencies original call . demonstrated options .Try options script get feel installing package looks like!successfully downloaded package, need tell R want access package. Much like objects, packages available R memory session. say, close R turn computer, etc., need reload every package required script. two ways load packages.First, can simply run function call library(). Notice unlike install.pacakges() function, library() call require put package name quotation marks.R another function call accessing packages acts nearly library(): require(). two codes nearly interchangeable small differences, library() preferred merely habit.Alternatively, can go Packages pane right-hand, bottom side RStudio search package want interact , check box next name. second option less norm, useful want check package version downloaded.Point--Click Method Package LoadingSee happens try options package psych, package likely yet downloaded.advanced ways install packages, especially packages housed CRAN. example, devtools package allows download packages development directly Github. types installs little scope , useful know future development programming skills.","code":"\n# install the tidyverse package from CRAN without specifying any additional actions \ninstall.packages('tidyverse')\n\n# install the tidyverse package including the package dependencies\ninstall.packages('tidyverse', dependencies = T)\n# first with library()\nlibrary(psych)\n\n# now with require()\n\nrequire(psych)\n\n# now try the point-and-click method in the bottom right-hand pane. "},{"path":"ch6.html","id":"help-files","chapter":"6 Functions, Packages, and Doing Stuff with Data","heading":"6.2 Help Files","text":"organically learn myriad packages necessary complete computational work necessary achieve analysis goals. things come reading, StackExchange forums, conversations grad school colleagues. However, knowing packages install half battle. must also understand functions available package, syntax required run functions.Packages housed CRAN easy access .pdfs called R Documentation usually pop search Google package name + “R file” something along lines. Skimming full R documentation thorough way expose new package, likely overkill cases. However, recommended acquaint R syntax case entire package seems particularly useful needs.case really just curious stumped particular function, can access help files directly R. two methods , one programmatic point--click R studio. example, let’s think dplyr package, auxiliary package downloaded installed tidyverse. dplyr contains function call anti_join() merges two datasets based rows one match . paying attention chapter set theory, anti-join finds elements X Y– non-intersecting elements X. , knowing function necessarily tell syntax goes function call following methods ways might access information.Specify R code want know function simple call ?<function> help(). , example merely run ?anti_join help(anti_join). ’d like specify package function part , cases functions share name, can also specify package help(anti_join, package=\"dplyr\").Specify R code want know function simple call ?<function> help(). , example merely run ?anti_join help(anti_join). ’d like specify package function part , cases functions share name, can also specify package help(anti_join, package=\"dplyr\").Visit Help tab bottom, right-hand panel type function question. one function associated name, appropriate help file pop pane information function. one function name, list functions respective packages. Click hyperlink appropriate package/function pair help file pop pane.Visit Help tab bottom, right-hand panel type function question. one function associated name, appropriate help file pop pane information function. one function name, list functions respective packages. Click hyperlink appropriate package/function pair help file pop pane.either method, R produce help files associated function question Help pane bottom, right-hand side RStudio interface. help file provides information syntax, definition argument syntax, output means. Furthermore, help files include examples, referred vignettes, help see functions action notated code. cases, help files sufficient help understand function works basic level. However, files unclear need bit walk , StackExchange forums better detailed information.","code":""},{"path":"ch6.html","id":"dealing-with-twins","chapter":"6 Functions, Packages, and Doing Stuff with Data","heading":"6.3 Dealing with Twins","text":"alluded previous section, sometimes encounter two functions identical names need make use packages containing functions script. happens, R’s default behavior choose one function prioritize , resulting one functions masked.Fear , can still coerce R use preferred function writing script qualified imports. Let’s revisit example dplyr another popular package Hmisc. packages contain functions called summarize(). want able use dplyr’s summarize() one line use Hmisc’s next, merely specify part function ::. See looks like. Note just functions share names imply perform computational operation.","code":"\n# qualified imports in R for packages with twin function names \n\n# dplyr's variant first, let's summarize the potato_weight variable  \n\ndplyr::summarize(potatoes_info, mean_pw=mean(potato_weight))\n\n# now let's use the Hmisc variant \n\nHmisc::summarize(potatoes_info$potato_weight, by=potatoes, FUN=mean)\n\n# you can also use this qualified import in your call for a help file \n\n?dplyr::summarize \n\n?Hmisc::summarize"},{"path":"ch7.html","id":"ch7","chapter":"7 Working with Existing Data + Making Homebases for R","heading":"7 Working with Existing Data + Making Homebases for R","text":"chapter:Setting working directorySetting working directoryImporting data understanding different file typesImporting data understanding different file typesDeveloping document workflow conventions (re)saving dataDeveloping document workflow conventions (re)saving dataIt likely create every dataset work R scratch. almost cases, want interact home computer Cloud environments import data R. requires tell R directory want pull least basic understanding type data file working able properly import file. Furthermore, manipulated data, run analyses, created data visualizations, want save created objects recognizable safe places according naming conventions make sense. chapter show things, well discuss key issues consider around file management.","code":""},{"path":"ch7.html","id":"the-working-directory-and-basic-directory-commands","chapter":"7 Working with Existing Data + Making Homebases for R","heading":"7.1 The Working Directory and Basic Directory Commands","text":"working R, computer ability pull save files based file pathways indicated coding environment. call getwd() tell exactly , however can also check (change ) going RStudio toolbar selecting Preferences. can see evaluation code, current working directory file pathway related project. base working directory try run code?change working directory Preferences menu, call setwd() offers flexibility change working directory needed. set-setwd() differ basis operating system, MacOS Windows write file paths little differently. However, general call cases straightforward. merely write file path corresponding directory like work run call R function. command setwd() maintain working directory close R session specify otherwise. Unless created R project, cover detail , best practice begin every R script defining working directory setwd() call double checking pathway correct getwd(). ’s also best practice double check file path anytime try change directory middle script.","code":"\n# print your current working directory \n\ngetwd()## [1] \"/Users/sarahmoore/OneDrive - Northwestern University/Teaching/2022_MathCamp/NU-math-camp/403-R_Text\""},{"path":"ch7.html","id":"special-case-r-projects","chapter":"7 Working with Existing Data + Making Homebases for R","heading":"7.1.1 Special Case: R Projects","text":"RStudio additional features allow sophisticated project management directory tools. Specifically, may seen option Create project simply File \\(\\rightarrow\\) New Project… File drop-menu. R project means create project directory within existing local directory computer automatically sets working directory chosen project home folder. example, authoring textbook, created R project within existing folder Math Camp Political Science 403 classroom documents corresponding data readily available compilation project. Another example might already existing dataset computer like run analysis data dataset. can choose create R project folder existing dataset import data, save code, export data results folder seamlessly otherwise.R project pretty attractive option, cases might great idea? R projects probably don’t make sense data files coming various sources outside single path (sounds messy…) working shared folder don’t yet want make code accessible others. said, R projects really flexible allow multiple source files (scripts .Rmd files) one easy locate place, long remember original R project stored. say, know working data script , might advantageous just make R project .","code":""},{"path":"ch7.html","id":"importing-data-of-all-kinds","chapter":"7 Working with Existing Data + Making Homebases for R","heading":"7.2 Importing Data of All Kinds","text":"likely used dealing data form tables, particularly Excel file extension .xlsx .csv. However, world data analysis two many types files might encounter. Others may include files statistical programs, .sas, .sav, .dta SAS, SPSS, STATA respectively. proprietary data file types merely opened computer unless find way read program like R. various ways , advantages ’ll go options .","code":""},{"path":"ch7.html","id":"read-as-.txt","chapter":"7 Working with Existing Data + Making Homebases for R","heading":"7.2.1 Read as .txt","text":"Information section derived YarRrr! Pirate’s Guide RFile types statistical analysis programs often contain variable value labels meta-data help data make sense. information great, might also make data clunky load across platforms properly. Therefore, straightforward way load data alternative programs treat file like .txt file.","code":""},{"path":"ch7.html","id":"using-other-packages-to-load-in-data","chapter":"7 Working with Existing Data + Making Homebases for R","heading":"7.2.2 Using other packages to load in data","text":"like retain meta-data files programs like STATA contain, options beyond read.table() function. packages haven, readr, rio, readxl examples packages might help loading data. Visit article ComputerWorld great rundown packages might helpful toward end.","code":""},{"path":"ch7.html","id":"workflow-and-data-management-conventions","chapter":"7 Working with Existing Data + Making Homebases for R","heading":"7.3 Workflow and Data Management Conventions","text":"Reliably saving data R scripts necessitates come transparent management system save update files. Just like advised comment R script future self remembers , name manage files future self can distinguish certain file iterations. continue add certain skills toolbox amass files, naming different subsets totally different source datasets dat data1 helpful people can meaningfully access files later time. Instead, start update save files tinkered , considerations naming files data storage:Date: Beginning file name date necessary, make things easier naming dates solves two related problems. First, files later dates can already identified latest versions basis date. Second, actually searching files, can order files basis name. , can identify files recently updated. Sometimes advantageous naming version numbered little changes don’t necessitate version numbering updates numbering process can become convoluted.Date: Beginning file name date necessary, make things easier naming dates solves two related problems. First, files later dates can already identified latest versions basis date. Second, actually searching files, can order files basis name. , can identify files recently updated. Sometimes advantageous naming version numbered little changes don’t necessitate version numbering updates numbering process can become convoluted.Clear, concise names identify project data type: Names like data_2020.dta helpful multiple projects happened 2020. Instead, name files along lines type data ’re storing (e.g. survey, election), pertinent location entity (e.g. Colombia, Mississippi, UN), relevant time horizon data (e.g. 2016 election, panel, post-2001).Clear, concise names identify project data type: Names like data_2020.dta helpful multiple projects happened 2020. Instead, name files along lines type data ’re storing (e.g. survey, election), pertinent location entity (e.g. Colombia, Mississippi, UN), relevant time horizon data (e.g. 2016 election, panel, post-2001).Skip strange characters spaces file names: Characters aside underscore, hyphen dash, plus sign widely savable different data management systems cloud services. just don’t use ! Instead spaces words, opt _ -.Skip strange characters spaces file names: Characters aside underscore, hyphen dash, plus sign widely savable different data management systems cloud services. just don’t use ! Instead spaces words, opt _ -.Version control: Often first, second, third time update something certainly always last. find potential co-authors colleagues managing version control Github. Therefore, creating naming conventions identify version data necessary. Ideally, naming conventions also accompanied .txt file Word document detail updates made version also working Github, along comments R code detail certain changes. Version control can also managed date features naming covered (1).Version control: Often first, second, third time update something certainly always last. find potential co-authors colleagues managing version control Github. Therefore, creating naming conventions identify version data necessary. Ideally, naming conventions also accompanied .txt file Word document detail updates made version also working Github, along comments R code detail certain changes. Version control can also managed date features naming covered (1).points cover basic considerations make naming files. Whatever case, pick system stick . , remember implement EVERY TIME save new file updated existing one.Given pointers, can identify following file names suitable proper data management need work?2018 Survey Afrobarometer.csv(download)2018 Survey Afrobarometer.csv(download)2021_july21_media_survey_PANEL.csv2021_july21_media_survey_PANEL.csv22-08-31_ColombiaStateCapacity_Project2020v2.dta22-08-31_ColombiaStateCapacity_Project2020v2.dtaANES_2018_v3.dtaANES_2018_v3.dta2022-subset: anes.csv2022-subset: anes.csv","code":""},{"path":"ch7.html","id":"codebooks","chapter":"7 Working with Existing Data + Making Homebases for R","heading":"7.3.1 Codebooks!!!","text":"One important features data even data . ’s codebooks! Codebooks additional documents always authored alongside dataset. Good codebooks tell reader variable: variable’s name, labels, variable measured, variable type , values variable mean. Without information, data really meaningless interpretable. codebooks even provide frequency tables variable values summary statistics variable.downloading data , always best practice download codebook alongside data store location. Even importantly, find position authoring dataset , always ensure write codebook alongside – even person ever use data! Making data accessible interpretable important data management transparency scientific decision-making, two related principles modern scientific discovery important academia.interested discussion, especially regard workflow encourage check Coding Economists Arthur Turrell. linked section talks workflows tools transparent reproducible analyses.","code":""},{"path":"ch8.html","id":"ch8","chapter":"8 Beyond Base R: Exploring the tidyverse","heading":"8 Beyond Base R: Exploring the tidyverse","text":"chapter:tidyverse?tidyverse?pipe %>% chain functions saving intermediate objectsThe pipe %>% chain functions saving intermediate objectsjoin, filter, select, modes merging subsetting datajoin, filter, select, modes merging subsetting dataData manipulation, wrangling, transformationData manipulation, wrangling, transformationConventions tidyverse programmingConventions tidyverse programmingAn alternative tidyverse: data.tableAn alternative tidyverse: data.tableThis chapter largely rely Wickham Grolemund’s R Data Science material. great text great revisit mastered basic concepts programming R.","code":""},{"path":"ch8.html","id":"what-why-how-of-tidyverse","chapter":"8 Beyond Base R: Exploring the tidyverse","heading":"8.1 What, why, how of tidyverse","text":"Tidyverse modern library packages developed modern data science. accompanying packages underlying functions share similar design grammar styles, meant seamless interaction functions among library packages.Packages core tidyverse within scope:dplyr modern toolkit data manipulation.dplyr modern toolkit data manipulation.ggplot2 provides framework grammar plotting data different types interacting dplyr verbs mutate data make graph-able.ggplot2 provides framework grammar plotting data different types interacting dplyr verbs mutate data make graph-able.tidyr helps consistently tidily clean data.tidyr helps consistently tidily clean data.readr package importing rectangular data different file types.readr package importing rectangular data different file types.packages tidyverse might encounter later: forcats, stringr, tibble, purrr, lubridate, rvest, magrittr.information greater power tidyverse check webpage packages., tidyverse tried true base R? base R great things, can also really inefficient difficult combine different functions together meaningful workflow. tidyverse package solves inefficiencies given relationships packages library ways tidyverse packages emphasize piping, chaining together codes form sophisticated chains functions.Given similar language interpretation across tidyverse packages, makes data analysis data science lot easier manage, opposed multitude different packages performing different steps code. However, learning curve high certain philosophy grammar workflow. Navigating employing grammar necessary running tidyverse code works. high learning curve can confusing times, thank putting work front end programming journey tidyverse’s efficiencies make end.","code":""},{"path":"ch8.html","id":"just-one-more-thing","chapter":"8 Beyond Base R: Exploring the tidyverse","heading":"8.1.1 Just one more thing!","text":"move inch chapter, recall install load packages R library went Chapter 6. install tidyverse activities, now! remainder chapter (much text), assume working tidyverse functions. make sure install tidyverse, make sure loaded via library() function.Next, load dataset mtcars already available Base R. merely run function data('mtcars'). play dataset data 1974 Motor Trend US magazine accounts different specifications across 32 different cars. realize nothing politics political science, dataset really accessible, fairly small, data span various types already covered previous chapters. also many examples using dataset, hopefully questions can find answers applied mtcars data, making bit comfortable follow along.","code":""},{"path":"ch8.html","id":"the-pipe","chapter":"8 Beyond Base R: Exploring the tidyverse","heading":"8.2 The Pipe %>%","text":"","code":""},{"path":"ch9.html","id":"ch9","chapter":"9 Data Visualization and ggplot2","heading":"9 Data Visualization and ggplot2","text":"chapter:Applying skills tidyverse visualizing data RApplying skills tidyverse visualizing data RDefining type graph desired via geom_ functionsDefining type graph desired via geom_ functionsPlaying around ggthemes graphical specificationsPlaying around ggthemes graphical specificationsSome suggestions conventions data visualization (.e. Dos Don’ts)suggestions conventions data visualization (.e. Dos Don’ts)","code":""},{"path":"ch9.html","id":"ggplot2","chapter":"9 Data Visualization and ggplot2","heading":"9.1 ggplot2","text":"Chapter (@ch8) talked suite packages compose tidyverse. Remember mention ggplot2? visualization package good don’t even bother teaching people visualize data base R anymore? Well, case missed mention fabulous package, fear . chapter cover basics ggplot2.won’t go underlying philosophy ggplot2 Grammar Graphics. interested Hadley Wickham’s free online text ggplot2: Elegant Graphics Data Analysis goes details points. book also goes detail can specialized graph types specifications. move forward, good resource revisit.just discovering landscape ggplot2, chapter also contains key takeaways visualizing data general. , even prefer base R, matplotlib Python, just want careful critic data visualization popular publications, chapter good insight regarding constitute good data viz practice.Based work previous chapter, already downloaded ggplot2 package. others useful tutorial ggrepel, ggthemes, ggtext, scales. get chance, install . case code work later , missed install one packages might . Piping control verbiage dplyr pretty necessary good command ggplot2. , feeling unsure skills, revisit sections items practice test data.","code":"\n# install all the recommended packages at once \n\ninstall.packages(c(\"ggrepel\", \"ggthemes\", \"ggtext\", \"scales\"))"},{"path":"ch9.html","id":"the-first-step-of-visualizing-data-know-the-data","chapter":"9 Data Visualization and ggplot2","heading":"9.2 The first step of visualizing data: KNOW THE DATA","text":"chapter largely applied walk-tutorial. Therefore, written working along text. can just easily copy paste code text R script, likely benefit developing memory around compose plot code, try type code go along.Let’s start simply just loading tidyverse package, loads ggplot2. data use chapter already loaded package. first take look msleep data. dataset details sleep behaviors various mammals gathered Savage West (2007). Let’s first get acquainted dataset kinds variables handling. Note long loaded ggplot2 tidyverse via library() call, anything else import data.First, can just check dimensions data dim(msleep). see 83 rows data 11 columns. means 83 observations 11 columns. can also run tibble(msleep) see snippet data. Alternatively, can check glimpse() function see column names. variable names lead us believe dataset contains number identifying traits mammal data, sleep waking patterns, physical information. talked , codebooks necessary understand data measured interpret different values. access codebook dataset can access help file via call ?msleep.","code":"\nlibrary(tidyverse)## ── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n## ✔ ggplot2 3.3.6     ✔ purrr   0.3.4\n## ✔ tibble  3.1.8     ✔ dplyr   1.0.9\n## ✔ tidyr   1.2.0     ✔ stringr 1.4.0\n## ✔ readr   2.1.2     ✔ forcats 0.5.1\n## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n## ✖ dplyr::filter() masks stats::filter()\n## ✖ dplyr::lag()    masks stats::lag()\ndim(msleep)## [1] 83 11\ntibble(msleep)## # A tibble: 83 × 11\n##    name         genus vore  order conse…¹ sleep…² sleep…³ sleep…⁴ awake  brainwt\n##    <chr>        <chr> <chr> <chr> <chr>     <dbl>   <dbl>   <dbl> <dbl>    <dbl>\n##  1 Cheetah      Acin… carni Carn… lc         12.1    NA    NA      11.9 NA      \n##  2 Owl monkey   Aotus omni  Prim… <NA>       17       1.8  NA       7    0.0155 \n##  3 Mountain be… Aplo… herbi Rode… nt         14.4     2.4  NA       9.6 NA      \n##  4 Greater sho… Blar… omni  Sori… lc         14.9     2.3   0.133   9.1  0.00029\n##  5 Cow          Bos   herbi Arti… domest…     4       0.7   0.667  20    0.423  \n##  6 Three-toed … Brad… herbi Pilo… <NA>       14.4     2.2   0.767   9.6 NA      \n##  7 Northern fu… Call… carni Carn… vu          8.7     1.4   0.383  15.3 NA      \n##  8 Vesper mouse Calo… <NA>  Rode… <NA>        7      NA    NA      17   NA      \n##  9 Dog          Canis carni Carn… domest…    10.1     2.9   0.333  13.9  0.07   \n## 10 Roe deer     Capr… herbi Arti… lc          3      NA    NA      21    0.0982 \n## # … with 73 more rows, 1 more variable: bodywt <dbl>, and abbreviated variable\n## #   names ¹​conservation, ²​sleep_total, ³​sleep_rem, ⁴​sleep_cycle\n## # ℹ Use `print(n = ...)` to see more rows, and `colnames()` to see all variable names\nglimpse(msleep)## Rows: 83\n## Columns: 11\n## $ name         <chr> \"Cheetah\", \"Owl monkey\", \"Mountain beaver\", \"Greater shor…\n## $ genus        <chr> \"Acinonyx\", \"Aotus\", \"Aplodontia\", \"Blarina\", \"Bos\", \"Bra…\n## $ vore         <chr> \"carni\", \"omni\", \"herbi\", \"omni\", \"herbi\", \"herbi\", \"carn…\n## $ order        <chr> \"Carnivora\", \"Primates\", \"Rodentia\", \"Soricomorpha\", \"Art…\n## $ conservation <chr> \"lc\", NA, \"nt\", \"lc\", \"domesticated\", NA, \"vu\", NA, \"dome…\n## $ sleep_total  <dbl> 12.1, 17.0, 14.4, 14.9, 4.0, 14.4, 8.7, 7.0, 10.1, 3.0, 5…\n## $ sleep_rem    <dbl> NA, 1.8, 2.4, 2.3, 0.7, 2.2, 1.4, NA, 2.9, NA, 0.6, 0.8, …\n## $ sleep_cycle  <dbl> NA, NA, NA, 0.1333333, 0.6666667, 0.7666667, 0.3833333, N…\n## $ awake        <dbl> 11.9, 7.0, 9.6, 9.1, 20.0, 9.6, 15.3, 17.0, 13.9, 21.0, 1…\n## $ brainwt      <dbl> NA, 0.01550, NA, 0.00029, 0.42300, NA, NA, NA, 0.07000, 0…\n## $ bodywt       <dbl> 50.000, 0.480, 1.350, 0.019, 600.000, 3.850, 20.490, 0.04…\n?msleep"},{"path":"ch9.html","id":"exercise-2","chapter":"9 Data Visualization and ggplot2","heading":"9.2.1 Exercise","text":"Given basic data exploration information codebook, types variables following:namenamesleep_totalsleep_totalbrainwtbrainwtvorevoreCategorical variables might loaded R class factor character. categorical variables classed dataset?","code":""},{"path":"ch9.html","id":"building-a-plot","chapter":"9 Data Visualization and ggplot2","heading":"9.3 Building a plot","text":"Plots ggplot2 built following elements:Specified dataframe data objectSpecified dataframe data objectChosen aesthetics map axes given aes()Chosen aesthetics map axes given aes()layer identifying type graph want build given geom functionA layer identifying type graph want build given geom functionAll additional specifications auxiliary base plot.case msleep data, let’s say want plot histogram vore variable. start specifying data, containing chosen variable aes() specification. one variable, set specification vore x variable argument. add geom_bar layer, use +. plus sign append new layers plots created ggplot2. now, just append geom_bar() without adding additional arguments.conventional create new line code + appending specification plot. suggest make identifying constitutive parts graph easier, helps debugging certain parts code wonky.Now try run code, instead make geom function geom_histogram().run code, still encounter warning. function geom_histogram() reserved continuous variables. However, can still use geom_histogram() roundabout way choose.Given vore character variable, natural way ggplot knows graph x axis. Therefore, specify want counts specified x variable. can geom function specifying geom_histogram(stat='count'). coerce ggplot2 include categories specified variable bin histogram.Check following plot, happens use geom_histogram() now?","code":"\n# histogram of vore variable, v1 \nggplot(msleep, aes(x=vore)) + \n  geom_bar()\n# histogram of vore variable, v2 \nggplot(msleep, aes(x=vore)) + \n  geom_histogram()\n# histogram of vore variable, v3 \nggplot(msleep, aes(x=vore)) + \n  geom_histogram(stat='count')"},{"path":"ch9.html","id":"adding-data-to-the-plot","chapter":"9 Data Visualization and ggplot2","heading":"9.3.1 Adding data to the plot","text":"two ways add data ggplot2 visualization. first basic way performed merely make dataframe first argument ggplot() call.second way allows work nuanced versions data works %>% pipe. Instead making data argument ggplot() data precede plot function pipe, shown option 2 code . data added way, arguments ggplot() function skip straight specifying aes().second option specify data source useful want use mutate(), summarize(), group_by(), another dplyr verb variable dataset graph resulting value. example, graph can plot mean sleep_total based mammal’s classification vore variable. , create pipe preceding ggplot() call groups mammals based vore attribute, summarize vore variable via mean() function.Based plot, type mammal greatest average sleep time?","code":"\n# option 1 for adding data to the plot \n\nggplot(data, aes(x,y))+\n  geom_point()\n\n#option 2 for adding data to the plot \n\ndata %>% \n  ggplot(aes(x,y))+\n  geom_point()\n# start the pipe with the data\n\nmsleep %>% \n  group_by(vore) %>%  # use group_by() on the grouping variable in question\n  summarize(vore_sleep=mean(sleep_total)) %>% # use summarize() to create an intermediate variable that is the group mean sleep_total\n  ggplot(aes(x = vore, y = vore_sleep))+ # begin the ggplot() call and specify the intermediate variable and grouping variable \n  geom_bar(stat=\"identity\")"},{"path":"ch9.html","id":"basic-aes-arguments","chapter":"9 Data Visualization and ggplot2","heading":"9.3.2 Basic aes() arguments","text":"aes() function ggplot maps aesthetics graph. basic arguments x y, always correspond first two arguments function. unncessary type x = y = arguments, always useful just make sure putting correct place.Aside basic axes arguments, aes() function can take specifications add detail plot. case want add data main specifications plot, can also specify arguments color, fill, shape, size.color: specifies outline color put around geom layer representing primary (x,y) observationcolor: specifies outline color put around geom layer representing primary (x,y) observationfill: specifies fill color geom layer given variable outside primary (x,y) relationship. Discrete variables fill solid colors, whereas continuous variables fill color scale.fill: specifies fill color geom layer given variable outside primary (x,y) relationship. Discrete variables fill solid colors, whereas continuous variables fill color scale.shape: behaves similarly color fill functions, instead changes shape icon indicated geom_ layer, best fit geom_point() applicationsshape: behaves similarly color fill functions, instead changes shape icon indicated geom_ layer, best fit geom_point() applicationssize: varies size (x,y) observation indicated aes() based third variable, also likely best fit geom_point() applicationssize: varies size (x,y) observation indicated aes() based third variable, also likely best fit geom_point() applicationsRecall histogram example , plotted counts vore variable. can use fill argument specify also like graph show conservation status within vore groups. turn, ggplot return histogram bars broken different colors accompanying legend fill color represents. Check code try .","code":"\nggplot(msleep, aes(x=vore, fill=conservation)) + \n  geom_histogram(stat=\"count\")"},{"path":"ch9.html","id":"exercise-3","chapter":"9 Data Visualization and ggplot2","heading":"9.3.2.1 Exercise","text":"Now chance try one . graph shows count mammal membership across value vore broken mammal conservation status.Now, graph histogram conservation status mammals dataset, also accounting vore value.Hint: Switch around variables x fill arguments code previous graph.graph differ previous example?graph differ previous example?Now, instead specifying fill argument, try using variable color argument. difference graph employing fill argument?Now, instead specifying fill argument, try using variable color argument. difference graph employing fill argument?thing, instead specifying size shape arguments. issue graphs?thing, instead specifying size shape arguments. issue graphs?","code":""},{"path":"ch9.html","id":"basic-geom-layers","chapter":"9 Data Visualization and ggplot2","heading":"9.3.3 Basic geom layers","text":"may noticed earlier examples, geom function different suffixes allow tell ggplot type graph ’d like plot. previous exercise, worked two pretty straightforward functions: geom_histogram() geom_bar(). good options dealing counts, percentages case bar graph. data? Rather tell uses one one, can see examples graphically.illustrating geom layers, ’ll use another dataset contained within ggplot2 package called economics. economics data time series dataset dated information personal consumption expenditures billions dollars (pce), population thousands (pop), personal savings rates (psavert), median duration unemployment (uempmed), number unemployed people thousands (unemploy). six variables accounted 574 observations.geom_point()Creates scatter plot points (x,y) observation.geom_boxplot()Creates boxplot distribution quartiles specified variable(s). x y specified, one discrete variable continuous. entail distribution continuous variable plotted subgroups discrete variable. options shown .\n3. geom_line()Creates line graph best used showing data time.\n4. geom_bar() geom_histogram()geom_bar() geom_histogram() behave quite similarly. Though, mentioned , geom_bar() discrete case geom_histogram() continuous case (though can coerce behave otherwise). plots can used show counts observations.Challenge: Based bar graph, think mean population economics data equal median population data?quite geom functions ggplot2. However, remainder useful beginners. assume go , look types plots best fit show data. also get better hang troubleshooting visualizations time goes .","code":"\n# create a scatterplot of the median duration of unemployment (x) and personal savings rates (y)\n\nggplot(economics, aes(x = uempmed, y = psavert)) +\n  geom_point()\n# create a boxplot of the distribution of the personal savings rate \nggplot(economics, aes(x = psavert)) + \n  geom_boxplot()\n# create a boxplot of the personal savings rate above and below the median unemployment level \n\neconomics %>% \n  mutate(unemploy_med=if_else(unemploy<median(unemploy, na.rm=T), 1, 0)) %>%\n  ggplot(aes(x = psavert, y = as_factor(unemploy_med))) + \n  geom_boxplot()\n# create a line graph of the median unemployment duration over time \n\nggplot(economics, aes(x = date, y = uempmed)) +\n  geom_line()\n# create a histogram of the total population in thousands, try different specifications of the `bins` argument in `geom_histogram()`\n\nggplot(economics, aes(x = pop)) +\n  geom_histogram()## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\nggplot(economics, aes(x = pop)) +\n  geom_histogram(bins=100)\nggplot(economics, aes(x = pop)) +\n  geom_histogram(bins=10)\n# create a bar chart of the number of observations above and below the mean population \n\neconomics %>% \n  mutate(pop_mean= if_else(pop<mean(pop, na.rm=T), 1, 0)) %>% \n           ggplot(aes(x = as_factor(pop_mean))) + \n           geom_bar()"},{"path":"ch9.html","id":"adding-flavor-to-your-base-plot","chapter":"9 Data Visualization and ggplot2","heading":"9.4 Adding flavor to your base plot","text":"tools previous sections show make graph using ggplot2 tools. make better? may noticed graphs axes labels formatted, value labels, general ggplot2 grey black theme terrible, bit drab. quite easy fixes just adding additional lines base ggplot appending + followed relevant ggplot function.","code":""},{"path":"ch9.html","id":"labelling-the-axes","chapter":"9 Data Visualization and ggplot2","heading":"9.4.1 Labelling the Axes","text":"First, start labelling x y axes adding title graph. couple different ways , may contexts one way better . now, choice likely one preference efficiency. say, now use whichever manner seems quicker implement.first way specify line new function label. , ’ll revisit line graph plots median duration employment time. Using graph, first add line xlab() relevant title x-axis quotation marks. , instead specify ylab() relevant title y-axis. Finally, think title whole graph run quotation marks function ggtitle(). specifications allow add label graph stepwise fashion.stepwise functions can added line--line produce specified labels together., potentially simpler way just combine axis title function single label function, ’ve shown . case, can simply specify labels function labs(), argument corresponding respective axis title. may complicated cases less efficient, now code likely efficient long syntax correct.","code":"\n# let's revisit the line graph showing the duration of median unemployment over time from above \n\n# add an x label \nggplot(economics, aes(x = date, y = uempmed)) +\n  geom_line() +\n  xlab(\"Date\")\n# add a y label \nggplot(economics, aes(x = date, y = uempmed)) +\n  geom_line() +\n  ylab(\"Median Unemployment Duration (in Weeks)\")\n# add a title \nggplot(economics, aes(x = date, y = uempmed)) +\n  geom_line() +\n  ggtitle(\"Median Unemployment Duration over Time, 1976-2015 (monthly)\")\n# let's put it all together \n\n# can add each as separate lines \nggplot(economics, aes(x = date, y = uempmed)) +\n  geom_line() +\n  xlab(\"Date\") + \n  ylab(\"Median Unemployment Duration (in Weeks)\") + \n  ggtitle(\"Median Unemployment Duration over Time, 1976-2015 (monthly)\")\n# or, can opt for a single function to label  \n\nggplot(economics, aes(x = date, y = uempmed)) +\n  geom_line() +\n  labs(x = \"Date\", y = \"Median Unemployment Duration (in Weeks)\", \n       title = \"Median Unemployment Duration over Time, 1976-2015 (monthly)\")"},{"path":"ch9.html","id":"labelling-ticks","chapter":"9 Data Visualization and ggplot2","heading":"9.4.2 Labelling Ticks","text":"","code":""},{"path":"ch9.html","id":"using-palettes-and-themes","chapter":"9 Data Visualization and ggplot2","heading":"9.4.3 Using Palettes and Themes","text":"grey black default plots made ggplot2 isn’t appealing visualizing data. saw can alter colors specifying additional variables color argument. ’s also possible can provide plot color palette information provide colorful graphics.Additionally, base ggplot2 font layout might interesting . case, ggthemes package allows override base visualization theme entirely favor alternative. style theme scratch , now preset themes great alternatives get bored typical ggplot2 plot.aside, can also save plot object. example, ’ve saved median unemployment duration object named plot_unemployment. saving base plot, can simply use object name append additional plot specificationsTo specify different theme plot, ’ll first need load package ggthemes.```","code":"\nlibrary(ggthemes)\n\nplot_unemployment<- ggplot(economics, aes(x = date, y = uempmed)) +\n  geom_line() +\n  labs(x = \"Date\", y = \"Median Unemployment Duration (in Weeks)\", \n       title = \"Median Unemployment Duration over Time, 1976-2015 (monthly)\")\n\nplot_unemployment + theme_economist()\nplot_unemployment + theme_fivethirtyeight()\nplot_unemployment + theme_stata()"}]
